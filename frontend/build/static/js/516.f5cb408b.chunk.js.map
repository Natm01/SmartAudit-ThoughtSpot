{"version":3,"file":"static/js/516.f5cb408b.chunk.js","mappings":"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","sources":["../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/identity.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/visit.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/directives.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/anchors.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/applyReviver.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/toJS.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Node.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Alias.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Scalar.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/createNode.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Collection.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyComment.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/foldFlowLines.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyString.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringify.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/log.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/Pair.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyPair.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyCollection.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/YAMLMap.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/map.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/nodes/YAMLSeq.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/seq.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/string.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/common/null.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/bool.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyNumber.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/float.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/int.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/core/schema.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/json/schema.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/tags.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/schema/Schema.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/doc/Document.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/stringify/stringifyDocument.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/errors.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-props.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-contains-newline.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-map-includes.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-map.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-end.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-collection.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-seq.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-scalar.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-node.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/composer.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/compose/compose-doc.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-scalar.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-stringify.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst-visit.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/cst.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/lexer.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/line-counter.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/parse/parser.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/dist/public-api.js","../node_modules/@thoughtspot/visual-embed-sdk/node_modules/yaml/browser/index.js"],"sourcesContent":["const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n","import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n","import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n","import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            prevAnchors ?? (prevAnchors = anchorNames(doc));\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n","/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n","import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n","import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair, hasAnchor } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc, ctx) {\n        let nodes;\n        if (ctx?.aliasResolveCache) {\n            nodes = ctx.aliasResolveCache;\n        }\n        else {\n            nodes = [];\n            visit(doc, {\n                Node: (_key, node) => {\n                    if (isAlias(node) || hasAnchor(node))\n                        nodes.push(node);\n                }\n            });\n            if (ctx)\n                ctx.aliasResolveCache = nodes;\n        }\n        let found = undefined;\n        for (const node of nodes) {\n            if (node === this)\n                break;\n            if (node.anchor === this.source)\n                found = node;\n        }\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc, ctx);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n","import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n","import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            ref.anchor ?? (ref.anchor = onAnchor(value));\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n","import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n","/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n","const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_FLOW, FOLD_QUOTED, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (/^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n","import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? (obj === null ? 'null' : typeof obj);\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ?? (tagObj.default ? null : tagObj.tag);\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    tagObj ?? (tagObj = getTagObject(ctx.doc.schema.tags, node));\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n","function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n","import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n","import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n","import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n","import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n","import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { MAP, isPair, isScalar } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n","import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n","import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n","import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n","import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n","function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        type ?? (type = Scalar.BLOCK_LITERAL);\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n","import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n","import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n","import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n","import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n","import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n","import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n","import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n","import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { floatNaN, floatExp, float } from './core/float.js';\nimport { intOct, intHex, int } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, intTime, floatTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n","import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n","import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n","import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n","class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '…' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '…';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '…\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n","function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n","function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n","import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n","import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n","import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n","function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n","import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // → key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n","import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n","import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n","import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n","import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n","import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n","function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        pos ?? (pos = before.length);\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n","import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n","import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n","import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n","import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n","/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n","const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` – Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` – Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` – Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` – The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n","export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n","import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n","/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n","import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n","import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n","// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n"],"names":["ALIAS","Symbol","for","DOC","MAP","PAIR","SCALAR","SEQ","NODE_TYPE","isAlias","node","isDocument","isMap","isPair","isScalar","isSeq","isCollection","isNode","hasAnchor","anchor","BREAK","SKIP","REMOVE","visit","visitor","visitor_","initVisitor","visit_","contents","Object","freeze","key","path","ctrl","callVisitor","replaceNode","concat","i","items","length","ci","splice","ck","cv","value","async","visitAsync","visitAsync_","Collection","Node","Value","assign","Alias","Map","Scalar","Seq","_visitor$Map","_visitor$Seq","_visitor$Pair","_visitor$Scalar","_visitor$Alias","call","Pair","parent","pt","Error","escapeChars","Directives","constructor","yaml","tags","this","docStart","docEnd","defaultYaml","defaultTags","clone","copy","atDocument","res","version","atNextDocument","explicit","add","line","onError","parts","trim","split","name","shift","handle","prefix","isValid","test","tagName","source","verbatim","slice","suffix","match","decodeURIComponent","error","String","tagString","tag","entries","startsWith","substring","replace","ch","toString","doc","lines","tagEntries","tagNames","_key","keys","some","tn","push","join","anchorIsValid","sa","JSON","stringify","msg","anchorNames","root","anchors","Set","findNewAnchor","exclude","has","applyReviver","reviver","obj","val","Array","isArray","len","v0","v1","undefined","k","from","get","delete","set","toJS","arg","ctx","map","v","toJSON","data","aliasCount","count","onCreate","keep","Number","NodeBase","type","defineProperty","create","getPrototypeOf","getOwnPropertyDescriptors","range","mapAsMap","maxAliasCount","onAnchor","arguments","TypeError","mapKeyWarned","values","super","resolve","nodes","found","aliasResolveCache","_arg","ReferenceError","getAliasCount","_onComment","_onChompKeep","src","options","verifyAliasOrder","implicitKey","item","c","kc","vc","Math","max","isScalarValue","BLOCK_FOLDED","BLOCK_LITERAL","PLAIN","QUOTE_DOUBLE","QUOTE_SINGLE","createNode","_tagName","_tagObj","_tagObj2","_ctx$schema$MAP$creat","_ctx$schema$MAP","schema","Boolean","BigInt","valueOf","aliasDuplicateObjects","onTagObj","sourceObjects","ref","_ref$anchor","tagObj","_match$find","filter","t","find","format","_t$identify","identify","findTagObject","iterator","nodeClass","default","collectionFromPath","isInteger","a","keepUndefined","isEmptyPath","next","done","configurable","enumerable","writable","it","addIn","rest","deleteIn","getIn","keepScalar","hasAllNullValues","allowScalar","every","n","commentBefore","comment","hasIn","setIn","stringifyComment","str","indentComment","indent","lineComment","endsWith","includes","FOLD_FLOW","FOLD_BLOCK","FOLD_QUOTED","foldFlowLines","text","mode","indentAtStart","lineWidth","minContentWidth","onFold","onOverflow","endStep","folds","escapedFolds","prev","end","overflow","escStart","escEnd","consumeMoreIndentedLines","j","fold","start","getFoldOptions","isBlock","containsDocumentMarker","doubleQuotedString","json","doubleQuotedAsJSON","minMultiLineLength","doubleQuotedMinMultiLineLength","code","substr","singleQuotedString","singleQuote","quotedString","qs","hasDouble","hasSingle","blockEndNewlines","RegExp","_unused","blockString","_ref","onComment","onChompKeep","blockQuote","commentString","forceBlockIndent","literal","indentLength","limit","strLen","lineLengthOverLimit","chomp","endStart","endNlPos","indexOf","startEnd","startWithSpace","startNlPos","header","foldedValue","literalFallback","foldOptions","body","stringifyString","inFlow","ss","_stringify","_type","actualString","indentStep","_tag$test","compat","plainString","defaultKeyType","defaultStringType","createStringifyContext","opt","directives","falseStr","flowCollectionPadding","indentSeq","nullStr","simpleKeys","trueStr","toStringOptions","collectionStyle","repeat","_ctx$indentAtStart","_ctx$resolvedAliases","resolvedAliases","o","_match$find2","testMatch","_obj$constructor$name","_obj","getTagObject","props","_node$tag","stringifyProps","warn","logLevel","warning","console","MERGE_KEY","merge","description","addToJSMap","addMergeToJSMap","mergeValue","srcMap","prototype","hasOwnProperty","addPairToJSMap","isMergeKey","jsKey","stringKey","strCtx","inStringifyKey","strKey","jsonStr","stringifyKey","jsValue","createPair","_","allNullValues","keyComment","explicitKey","vsb","vcb","valueComment","keyCommentDone","chompKeep","spaceBefore","flow","valueCommentDone","valueStr","ws","cs","_ref2","_ctx$inFlow","vs0","nl0","hasNewline","hasPropsLine","sp0","stringifyPair","stringifyCollection","collection","stringifyFlowCollection","stringifyBlockCollection","blockItemPrefix","flowChars","itemIndent","itemCtx","addCommentBefore","ik","_ref3","_ref4","fcPadding","reqNewline","linesAtValue","iv","reduce","sum","_ref5","ic","trimStart","findPair","YAMLMap","replacer","sortMapEntries","sort","pair","overwrite","_this$schema","_pair","sortEntries","findIndex","Type","YAMLSeq","idx","asItemIndex","seq","string","nullTag","boolTag","stringifyNumber","minFractionDigits","num","isFinite","isNaN","d","floatNaN","toLowerCase","NaN","NEGATIVE_INFINITY","POSITIVE_INFINITY","floatExp","parseFloat","toExponential","float","dot","intIdentify","intResolve","offset","radix","intAsBigInt","parseInt","intStringify","intOct","_onError","int","intHex","stringifyJSON","binary","Uint8Array","atob","buffer","charCodeAt","buf","btoa","s","fromCharCode","ceil","resolvePairs","_pair$value","cn","createPairs","iterable","pairs","YAMLOMap","bind","omap","seenKeys","boolStringify","trueTag","falseTag","f","sign","intBin","YAMLSet","keepPair","parseSexagesimal","asBigInt","p","stringifySexagesimal","_60","unshift","padStart","intTime","floatTime","timestamp","Date","year","month","day","hour","minute","second","millisec","date","UTC","tz","abs","_value$toISOString$re","toISOString","schemas","schema$1","schema$2","tagsByName","bool","null","coreKnownTags","getTags","customTags","schemaName","addMergeTag","schemaTags","sortMapEntriesByKey","b","Schema","resolveKnownTags","toStringDefaults","knownTags","Document","_options","errors","warnings","_replacer","keepSourceTokens","prettyErrors","strict","stringKeys","uniqueKeys","_directives","setSchema","assertCollection","createAlias","keyToStr","asStr","anchorPrefix","setAnchors","aliasObjects","prevAnchors","createNodeAnchors","sv","jsonArg","_doc$directives","hasDirectives","dir","contentComment","dc","stringifyDocument","YAMLError","pos","message","YAMLParseError","YAMLWarning","prettifyError","lc","linePos","col","lineStr","lineStarts","min","pointer","resolveProps","tokens","indicator","parentIndent","startOnNewline","atNewline","hasSpace","commentSep","reqSpace","tab","newlineAfterProp","comma","token","cb","last","containsNewline","st","sep","flowIndentCheck","fc","mapIncludes","search","isEqual","startColMsg","resolveEnd","blockMsg","resolveCollection","CN","coll","bm","_tag$nodeClass","composeNode","composeEmptyNode","atRoot","commentEnd","collItem","_keyProps$found","keyProps","atKey","keyStart","keyNode","valueProps","valueNode","srcToken","resolveBlockMap","bs","resolveBlockSeq","fcName","prevItemComment","loop","_prev$value","endRange","expectedEnd","ce","ee","cePos","toUpperCase","resolveFlowCollection","Coll","resolveBlockScalar","scalar","ts","parseBlockScalarHeader","first","m","splitLines","chompStart","content","trimIndent","contentStart","prevMoreIndented","crlf","resolveFlowScalar","rel","badChar","foldLines","plainValue","singleQuotedValue","foldNewline","cc","escapeCodes","x","u","U","parseCharCode","raw","wsStart","doubleQuotedValue","valueEnd","re","_match$","_match","exec","lastIndex","e","r","N","L","P","fromCodePoint","composeScalar","tagToken","matchWithTest","kt","findScalarTagByName","_tag$test2","_schema$compat$find","_tag$test3","findScalarTagByTest","emptyScalarPosition","before","_st","isSrcToken","alias","composeAlias","_tag$resolve","_tag$resolve2","_tag","_tag2","nl","lastProp","expType","_kt$collection","composeCollection","getErrorPos","parsePrelude","prelude","_prelude","atComment","afterEmptyLine","Composer","atDirectives","decorate","afterDoc","apply","streamInfo","compose","_this","forceDoc","endOffset","opts","contentEnd","composeDoc","_this2","resolveAsScalar","createScalarToken","context","_context$end","he","head","addEndtoBlockProps","setScalarValue","afterKey","setBlockScalarValue","setFlowScalarValue","oa","tok","cst","stringifyToken","stringifyItem","_visit","field","itemAtPath","index","_item","parentCollection","BOM","DOCUMENT","FLOW_END","prettyToken","tokenType","isEmpty","hexDigits","tagChars","flowIndicatorChars","invalidAnchorChars","isNotAnchorChar","Lexer","atEnd","blockScalarIndent","blockScalarKeep","flowKey","flowLevel","indentNext","indentValue","lineEndPos","lex","incomplete","_this$next","hasChars","parseNext","atLineEnd","charAt","continueScalar","dt","getLine","setNext","state","peek","parseStream","parseLineStart","parseBlockStart","parseDocument","parseFlowCollection","parseQuotedScalar","parseBlockScalar","parsePlainScalar","pushCount","dirEnd","pushSpaces","pushNewline","sp","ch0","ch1","pushIndicators","pushUntil","quote","qb","pushToIndex","lastChar","allowEmpty","pushTag","allowTabs","LineCounter","addNewLine","low","high","mid","includesToken","list","findNonEmptyIndex","isFlowToken","getPrevProps","_it$sep","getFirstKeyStartProps","_prev$i","fixFlowSeqItems","Parser","onNewLine","atNewLine","atScalar","onKeyLine","stack","lexer","parse","lexeme","step","pop","sourceToken","top","stream","document","blockScalar","blockMap","blockSequence","flowCollection","documentEnd","lineEnd","bv","startBlockValue","atIndentedComment","atMapIndent","atNextItem","fs","flowScalar","_prev$value2","parseOptions","lineCounter","parseAllDocuments","parser","composer","docs","forEach","empty","_doc","_reviver","round"],"sourceRoot":""}